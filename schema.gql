type BookCollection implements Node {
  id: ID!
}

"""Page connection for BookCollection."""
type BookCollectionPageConnection {
  collection: [BookCollection]
  paginationInfo: BookCollectionPaginationInfo!
}

"""Information about the pagination."""
type BookCollectionPaginationInfo {
  itemsPerPage: Int!
  lastPage: Int!
  totalCount: Int!
}

type BookItem implements Node {
  id: ID!
}

"""A node, according to the Relay specification."""
interface Node {
  """The id of this node."""
  id: ID!
}

type Query {
  node(id: ID!): Node
  book(id: ID!): BookItem
  books(
    """Returns the current page."""
    page: Int

    """Returns the number of items per page."""
    itemsPerPage: Int
  ): BookCollectionPageConnection
  store(id: ID!): StoreItem
  stores(
    """Returns the current page."""
    page: Int

    """Returns the number of items per page."""
    itemsPerPage: Int
  ): StoreCollectionPageConnection
}

type StoreCollection implements Node {
  id: ID!
}

"""Page connection for StoreCollection."""
type StoreCollectionPageConnection {
  collection: [StoreCollection]
  paginationInfo: StoreCollectionPaginationInfo!
}

"""Information about the pagination."""
type StoreCollectionPaginationInfo {
  itemsPerPage: Int!
  lastPage: Int!
  totalCount: Int!
}

type StoreItem implements Node {
  id: ID!
}
